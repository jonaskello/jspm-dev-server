#!/usr/bin/env node

var options = require('commander'),
    path = require('path'),
    jspmConfig = require('jspm/lib/config')

function collect(val, memo) {
  memo.push(val);
  return memo;
}

options
  .version('0.4.0')
  .option('-p, --port <n>', 'port to listen on. defaults to 3000', parseInt)
  .option('-d, --dir <folder>', 'directory to serve static files from')
  .option('-c, --cert <pem>', 'path to a PEM certificate. defaults to localhost.crt in current folder')
  .option('-k, --key <pem>', 'path to a PEM key. defaults to localhost.key in current folder')
  .option('-i, --ignore <path>', 'paths to ignore from file watching', collect, [/[\/\\]\./, 'node_modules/**', 'jspm_packages/**', /^\./])
  .option('-l, --proxy <url>', 'url to forward the request if file is not found')
  .parse(process.argv);

options.port = options.port || 3000
options.cert = path.resolve(options.cert || 'localhost.crt')
options.key = path.resolve(options.key || 'localhost.key')
options.pjson = path.resolve(options.dir || process.cwd(), 'package.json')
options.chokidar = { ignored: options.ignore }

process.env.jspmConfigPath = options.pjson
jspmConfig.loadSync()

options.baseURL = jspmConfig.loaderBrowser.baseURL
options.dir = jspmConfig.pjson.dir
options.serverURL = jspmConfig.pjson.baseURL

try {

  var server = require('..')(options)
  console.log(`[jspm-dev-server] serving ${options.serverURL} on https://localhost:${options.port}${options.baseURL}`)
  server.listen(options.port)
} catch(error) {
  if (error.code === 'ENOENT') {
    console.warn(`You are missing TLS keys at ${error.path}`)
    console.warn("Generate one like: openssl req -x509 -newkey rsa:2048 -keyout localhost.key -out localhost.crt -days 30 -nodes -subj '/CN=localhost'")
  } else {
    throw error
  }
}

